@page "/JZ/JzChat"
@using back.Entities.JZ
@using back.Entities.Setting
@using System

<PageTitle>群组管理</PageTitle>

<AdminTable2 TItem="JzChat" Context="item" PageSize="20" Title="群组管理" TableTd99Width="230" OnQuery="OnQuery"
    InitQuery="InitQuery" OnEdit="OnEdit">

    <TableHeader>
        <th>ID</th>
        <th>ChatOriginalId</th>
        <th>群组标题</th>
        <th>汇率</th>
        <th>创建时间</th>
    </TableHeader>
    <TableRow>
        <td>@item.Id</td>
        <td>@item.ChatOriginalId</td>
        <td>@item.Title</td>
        <td>@item.ExchangeRate</td>
        <td>@item.CreatedTime?.ToString("yyyy-MM-dd HH:mm:ss")</td>
    </TableRow>
    <TableTd99>
        <button @onclick="e => BeginAllocMembers(item)" type="button" class="mr-2 btn btn-light btn-xs"><i
                class="fa fa-user-secret"></i>分配系统用户管理</button>
    </TableTd99>
    <EditTemplate>
        <div class="row">
            <div class="form-group col-12">
                <label class="form-label">群组标题</label>
                <input @bind="item.Title" type="text" class="form-control" placeholder="" maxlength="255">
            </div>
            <div class="form-group col-12">
                <label class="form-label">群组用户名</label>
                <input @bind="item.Username" type="text" class="form-control" placeholder="" maxlength="255">
            </div>
            <div class="form-group col-12">
                <label class="form-label">群组简介</label>
                <input @bind="item.Bio" type="text" class="form-control" placeholder="" maxlength="255">
            </div>
            <div class="form-group col-12">
                <label class="form-label">是否启用</label>
                <Switch @bind-Value="item.Description" OnColor="Color.Success" />
            </div>
            <div class="form-group col-12">
                <label class="form-label">群组邀请链接</label>
                <input @bind="item.InviteLink" type="text" class="form-control" placeholder="" maxlength="255">
            </div>
        </div>
    </EditTemplate>
</AdminTable2>


<AllocTable2 TItem="JzChat" TChild="Member" @bind-Item="@allocItemMembers" ChildProperty="Members"
    Title="@($"【分配系统用户管理】{allocItemMembers?.Title}")">
    <TableTd1>@context.Username</TableTd1>
</AllocTable2>

@code {

    [Inject] IAggregateRootRepository<JzChat> repo { get; set; }
    [Inject] AdminContext adminContext { get; set; }

    async Task InitQuery(AdminQueryInfo e)
    {
        var allMembers = await repo.Orm.Select<Member>().ToListAsync();
        e.Filters = new AdminFilterInfo[]
        {
new AdminFilterInfo("用户分类", "Members", false, 12,
string.Join(",", allMembers.Select(a => a.Username)),
string.Join(",", allMembers.Select(a => a.Id))),
        };
        await Task.Yield();
    }
    void OnQuery(AdminQueryEventArgs<JzChat> e)
    {
        if (adminContext.User.Username == "admin")
        {
            e.Select.IncludeMany(a => a.Members)
            .WhereIf(e.Filters[0].HasValue, a => a.Members.Any(b => e.Filters[0].Values<long>().Contains(b.Id)))
            .WhereIf(!e.SearchText.IsNull(), a => a.Title.Contains(e.SearchText) ||
            a.Username.Contains(e.SearchText) ||
            a.Bio.Contains(e.SearchText) ||
            a.InviteLink.Contains(e.SearchText) ||
            a.CreatedUserName.Contains(e.SearchText) ||
            a.ModifiedUserName.Contains(e.SearchText));
        }
        else
        {
            e.Select.IncludeMany(a => a.Members)
            .Where(a => a.Members.Any(b => b.Id == adminContext.User.Id))
            .WhereIf(e.Filters[0].HasValue, a => a.Members.Any(b => e.Filters[0].Values<long>().Contains(b.Id)))
            .WhereIf(!e.SearchText.IsNull(), a => a.Title.Contains(e.SearchText) ||
            a.Username.Contains(e.SearchText) ||
            a.Bio.Contains(e.SearchText) ||
            a.InviteLink.Contains(e.SearchText) ||
            a.CreatedUserName.Contains(e.SearchText) ||
            a.ModifiedUserName.Contains(e.SearchText));
        }
    }

    async Task OnEdit(JzChat item)
    {
        await Task.Yield();
    }

    JzChat allocItemMembers;
    [AdminButton("alloc_members")]
    void BeginAllocMembers(JzChat item) => allocItemMembers = item;
}
